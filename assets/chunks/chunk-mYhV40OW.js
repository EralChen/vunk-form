import{b1 as a,dX as s,_ as o,D as p,$ as r,a0 as e,dj as n,a2 as m,dd as l}from"./chunk-Ceac9yqH.js";import{S as d}from"./chunk-mFdsfPwj.js";import{n as c}from"./chunk-Dd8VJPz2.js";import"./chunk-Defr39CA.js";import"./chunk-BvwBNQlH.js";import"./chunk-Isw0PHqr.js";import"./chunk-DsEj1cS7.js";import"./chunk-Ch0SDxT-.js";import"./chunk-DBIPdCjN.js";import"./chunk-BZ9OKtPV.js";import"./chunk-KtopUNfM.js";import"./chunk-Bwn5cAR6.js";import"./chunk-BVAz2WR2.js";import"./chunk-BgzjqTpv.js";import"./chunk-DcII7849.js";import"./chunk-DculGXQ1.js";import"./chunk-DBEERzE0.js";import"./chunk-BYAZvre2.js";import"./chunk-7sdQDss_.js";import"./chunk-CcEbRgUF.js";import"./chunk-CMxYKz-S.js";import"./chunk-DYAQWYaH.js";import"./chunk-IoBhzb0e.js";import"./chunk-CvgiXnaQ.js";import"./chunk-eUV7XOk4.js";import"./chunk-CDjqdF23.js";import"./chunk-CvPuQdp1.js";import"./chunk-BfiWDRQA.js";import"./chunk-Cm87XsPu.js";import"./chunk-Wa8cmqdu.js";import"./chunk-LfmKLE23.js";import"./chunk-B3V7b7Fv.js";import"./chunk-D91ktwrC.js";import"./chunk-hmo43NcY.js";import"./chunk-BajV466H.js";import"./chunk-C82wiWpr.js";import"./chunk-DK8xp4NC.js";import"./chunk-BpKIhBOz.js";import"./chunk-CggzEh3c.js";const h=.2;let t=class extends d(c(l)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=a("enable-feature:im-shading"),this.drapeTargetType=s.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?h:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new p;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),o),"modifications")}};r([e()],t.prototype,"layer",void 0),r([e()],t.prototype,"i3slayer",null),r([e(n)],t.prototype,"updatingProgress",void 0),r([e()],t.prototype,"updatingProgressValue",null),r([e()],t.prototype,"lodFactor",null),r([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([m("esri.views.3d.layers.SceneLayerView3D")],t);const Z=t;export{Z as default};
