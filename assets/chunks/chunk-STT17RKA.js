import{u as a}from"./chunk-vPx4somd.js";import{e as c}from"./chunk-B3ZW0ET0.js";import"./chunk-fEI7Cr-O.js";import"./chunk-XIlYN-8S.js";import"./chunk-gbA2XUGj.js";import"./chunk-cqKyegso.js";import"./chunk-B7yAMqV2.js";import"./chunk-Ch0SDxT-.js";import"./chunk-DBIPdCjN.js";let n,e;async function z(r){if(await f(),r.inputs.length<1)return{result:{status:a.Failed,error:"",jobDescJson:"",data:new Uint8Array(0),missingInputUrls:[]},transferList:[]};const i={ptrs:[],sizes:[]};for(const s of r.inputs){const l=e._malloc(s.byteLength);new Uint8Array(e.HEAPU8.buffer,l,s.byteLength).set(new Uint8Array(s)),i.ptrs.push(l),i.sizes.push(s.byteLength)}const t=e.process(r.jobDescJson,i,r.isMissingResourceCase),u=t.status===a.Succeeded&&t.data,p=t.status===a.MissingInputs&&t.missingInputUrls.length>0;if(u){const s=t.data.slice();t.data=s}else p&&(t.jobDescJson=t.jobDescJson.slice(0),t.originalInputs=r.inputs);for(let s=0;s<i.ptrs.length;++s)e._free(i.ptrs[s]);const o=[];if(u)o.push(t.data.buffer);else if(p)for(const s of r.inputs)o.push(s);return{result:t,transferList:o}}function L(){e&&(e.uninitialize_lyr3d_worker_wasm(),e=null)}function f(){return e?Promise.resolve():(n||(n=c().then(r=>{e=r,e.initialize_lyr3d_worker_wasm(),n=null})),n)}export{L as destroyWasm,f as initialize,z as process};
