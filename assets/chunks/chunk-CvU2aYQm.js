import{i as $}from"./chunk-B1oiF1bP.js";import{gM as P,gN as k,gO as _,gP as E,gQ as F}from"./chunk-C6_JAUe5.js";import"./chunk-CUPffv_6.js";import"./chunk-CBfavJJp.js";import"./chunk-BPlwv3NH.js";import"./chunk-fEI7Cr-O.js";import"./chunk-Ch0SDxT-.js";import"./chunk-DBIPdCjN.js";const G=96/72;class T{constructor(y){this._spatialReference=y,this._imageDataCanvas=null,this._cimResourceManager=new $}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(y,d,p,f,r,a,n,h,M){if(!y)return null;const{data:c}=y;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c;a||(a=P(C));const i=await k.resolveSymbolOverrides(c,d,this._spatialReference,r,a,n,h),l=this._cimResourceManager,w=[];_.fetchResources(i,l,w),_.fetchFonts(i,l,w),w.length>0&&await Promise.all(w);const{width:t,height:s}=p,R=D(a,t,s,f),e=_.getEnvelope(i,R,l);if(!e)return null;let o=1,I=0,v=0;switch(C.type){case"CIMPointSymbol":case"CIMTextSymbol":{let m=1;e.width>t&&(m=t/e.width);let u=1;e.height>s&&(u=s/e.height),f==="preview"&&(e.width<t&&(m=t/e.width),e.height<s&&(u=s/e.height)),o=Math.min(m,u),I=e.x+e.width/2,v=e.y+e.height/2}break;case"CIMLineSymbol":{(M||e.height>s)&&(o=s/e.height),v=e.y+e.height/2;const m=e.x*o+t/2,u=(e.x+e.width)*o+t/2,{paths:b}=R;b[0][0][0]-=m/o,b[0][2][0]-=(u-t)/o}break;case"CIMPolygonSymbol":{I=e.x+e.width/2,v=e.y+e.height/2;const m=e.x*o+t/2,u=(e.x+e.width)*o+t/2,b=e.y*o+s/2,S=(e.y+e.height)*o+s/2,{rings:g}=R;m<0&&(g[0][0][0]-=m,g[0][3][0]-=m,g[0][4][0]-=m),b<0&&(g[0][0][1]+=b,g[0][1][1]+=b,g[0][4][1]+=b),u>t&&(g[0][1][0]-=u-t,g[0][2][0]-=u-t),S>s&&(g[0][2][1]+=S-s,g[0][3][1]+=S-s)}}const z={type:"cim",data:{type:"CIMSymbolReference",symbol:i}};return this.rasterize(z,t,s,I,v,o,a,1,R)}rasterize(y,d,p,f,r,a,n,h=0,M=null){const{data:c}=y;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c,i=this._canvas,l=(window.devicePixelRatio||1)*G;i.width=d*l,i.height=p*l,n||(n=P(C)),M||(M=D(n,d,p,"legend")),i.width+=2*h,i.height+=2*h;const w=i.getContext("2d",{willReadFrequently:!0}),t=F.createIdentity();return t.translate(-f,-r),t.scale(a*l,-a*l),t.translate(d*l/2+h,p*l/2+h),w.clearRect(0,0,i.width,i.height),new E(w,this._cimResourceManager,t,!0).drawSymbol(C,M),w.getImageData(0,0,i.width,i.height)}}function D(x,y,d,p){const r=-y/2+1,a=y/2-1,n=d/2-1,h=-d/2+1;switch(x){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[r,0],[0,0],[a,0]]]};default:return p==="legend"?{rings:[[[r,n],[a,0],[a,h],[r,h],[r,n]]]}:{rings:[[[r,n],[a,n],[a,h],[r,h],[r,n]]]}}}export{T as CIMSymbolRasterizer};
