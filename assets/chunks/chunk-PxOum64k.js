import{b1 as a,dX as s,_ as o,D as p,$ as r,a0 as e,dj as n,a2 as m,dd as l}from"./chunk-COS73Icn.js";import{S as d}from"./chunk-Dmen00nb.js";import{n as c}from"./chunk-DJgDkxr7.js";import"./chunk-MvqiMl48.js";import"./chunk-CwIodqNZ.js";import"./chunk-BAtEUBju.js";import"./chunk-fEI7Cr-O.js";import"./chunk-Ch0SDxT-.js";import"./chunk-DBIPdCjN.js";import"./chunk-vg0_7fXG.js";import"./chunk-BT6xTQBc.js";import"./chunk-BSLgZ_uK.js";import"./chunk-CUSBH79n.js";import"./chunk-kKkrXHtK.js";import"./chunk-DqIy25xN.js";import"./chunk-BPLhpZw6.js";import"./chunk-5TgW2WGq.js";import"./chunk-BvnDXp9F.js";import"./chunk-1Qb2rXSw.js";import"./chunk-CcEbRgUF.js";import"./chunk-CQa7qruX.js";import"./chunk-C1G0sk5q.js";import"./chunk-Cg_kBWnN.js";import"./chunk-CvgiXnaQ.js";import"./chunk-DXv0nX5O.js";import"./chunk-DNPnKVU1.js";import"./chunk-oQseUK_7.js";import"./chunk-CjI0zzPS.js";import"./chunk-CV9m6gv_.js";import"./chunk-Wa8cmqdu.js";import"./chunk-DCIgpbHf.js";import"./chunk-DWMHjv2r.js";import"./chunk-GtPY3b3i.js";import"./chunk--g9_YWPe.js";import"./chunk-xZVPQ-QE.js";import"./chunk-zZ9X4diy.js";import"./chunk-vGyAHkt6.js";import"./chunk-N-vUQid2.js";import"./chunk-CggzEh3c.js";const h=.2;let t=class extends d(c(l)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=a("enable-feature:im-shading"),this.drapeTargetType=s.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?h:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new p;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),o),"modifications")}};r([e()],t.prototype,"layer",void 0),r([e()],t.prototype,"i3slayer",null),r([e(n)],t.prototype,"updatingProgress",void 0),r([e()],t.prototype,"updatingProgressValue",null),r([e()],t.prototype,"lodFactor",null),r([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([m("esri.views.3d.layers.SceneLayerView3D")],t);const Z=t;export{Z as default};
