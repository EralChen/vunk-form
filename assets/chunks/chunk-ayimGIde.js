import{fl as h,fm as i,fn as d,fo as l,U as p}from"./chunk-BCy4u5kM.js";import"./chunk-fziB7CNt.js";import"./chunk-CSFIeiLH.js";import"./chunk-C7hCAWl2.js";import"./chunk-fEI7Cr-O.js";import"./chunk-Ch0SDxT-.js";function y(n){const t=n.toJSON();return t.attachmentTypes&&(t.attachmentTypes=t.attachmentTypes.join(",")),t.keywords&&(t.keywords=t.keywords.join(",")),t.globalIds&&(t.globalIds=t.globalIds.join(",")),t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.size&&(t.size=t.size.join(",")),t}function A(n,t){const e={};for(const o of t){const{parentObjectId:a,parentGlobalId:s,attachmentInfos:c}=o;for(const r of c){const{id:u}=r,f=h(i(`${n.path}/${a}/attachments/${u}`)),m=d.fromJSON(r);m.set({url:f,parentObjectId:a,parentGlobalId:s}),e[a]?e[a].push(m):e[a]=[m]}}return e}function g(n,t,e){let o={query:l({...n.query,f:"json",...y(t)})};return e&&(o={...e,...o,query:{...e.query,...o.query}}),p(n.path+"/queryAttachments",o).then(a=>a.data.attachmentGroups)}async function k(n,t,e){const{objectIds:o}=t,a=[];for(const s of o)a.push(p(n.path+"/"+s+"/attachments",e));return Promise.all(a).then(s=>o.map((c,r)=>({parentObjectId:c,attachmentInfos:s[r].data.attachmentInfos})))}export{g as executeAttachmentQuery,k as fetchAttachments,A as processAttachmentQueryResult};
