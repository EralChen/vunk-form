import{dc as d,dg as m,eE as p,V as u,z as n,$ as s,a0 as o,a2 as f,dd as c}from"./chunk-B1N8G8sW.js";import{n as g}from"./chunk-ChyVnfdE.js";import{c as y}from"./chunk--Jl5QS_-.js";import"./chunk-CyiLY1__.js";import"./chunk-CAS0iGZj.js";import"./chunk-C7ZeX_9O.js";import"./chunk-fEI7Cr-O.js";import"./chunk-Ch0SDxT-.js";let r=class extends d(y(g(c))){constructor(){super(...arguments),this.type="wmts-3d"}initialize(){this._getCompatibleTileInfoMatrixSet(t=>this._getTileInfoSupportError(t.tileInfo,t.fullExtent));const e=m(()=>this.view?.basemapTerrain?.tilingSchemeLocked).then(()=>{const t=this._getCompatibleTileInfoMatrixSet(i=>this._getTileInfoError(i.tileInfo,i.fullExtent));t!=null&&(t.id!==null&&this.layer.activeLayer.tileMatrixSetId!==t.id&&(this.layer.activeLayer.tileMatrixSetId=t.id),t.tileInfo&&(this.tileInfo=t.tileInfo),this.layer.fullExtent=t.fullExtent)});this.addResolvingPromise(e),this.when(()=>this._postInitialize())}get hasMixedImageFormats(){return!0}refresh(){this.emit("data-changed")}canResume(){if(!super.canResume())return!1;const e=this.layer.activeLayer.tileMatrixSet;return e!=null&&!this._getTileInfoError(e.tileInfo,e.fullExtent)}async doRefresh(){this.suspended||this.emit("data-changed")}_postInitialize(){this._updatingHandles.add(()=>this.layer?.activeLayer?.styleId,()=>this.refresh()),this._updatingHandles.add(()=>this.layer?.activeLayer,e=>{const t=this._getCompatibleTileInfoMatrixSet(i=>this._getTileInfoError(i.tileInfo,i.fullExtent),!0);t&&t.id!=null&&e.tileMatrixSetId!==t.id&&(this.layer.activeLayer.tileMatrixSetId=t.id),this.notifyChange("suspended"),this.canResume()&&this.refresh()})}_getCompatibleTileInfoMatrixSet(e,t=!1){const i=p(this.layer);if(i!=null){if(u.isCollection(i))return i.find(h=>{const l=e(h);return l!=null&&(t?n.getLogger(this).error("The selected tile matrix set is not compatible with the view",l):this.addResolvingPromise(Promise.reject(l))),l==null});const a=e(i);return a!=null&&(t?n.getLogger(this).error("The selected tile matrix set is not compatible with the view",a):this.addResolvingPromise(Promise.reject(a))),i}return null}_getTileInfoError(e,t){return this._getTileInfoSupportError(e,t)||this._getTileInfoCompatibilityError(e,this.view.basemapTerrain.tilingScheme)}};s([o({readOnly:!0})],r.prototype,"hasMixedImageFormats",null),s([o()],r.prototype,"layer",void 0),s([o()],r.prototype,"suspended",void 0),s([o()],r.prototype,"tileInfo",void 0),r=s([f("esri.views.3d.layers.WMTSLayerView3d")],r);const L=r;export{L as default};
