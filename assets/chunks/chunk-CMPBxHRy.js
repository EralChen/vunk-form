import{b1 as a,dX as s,_ as o,D as p,$ as r,a0 as e,dj as n,a2 as m,dd as l}from"./chunk-DfTZZpt0.js";import{S as d}from"./chunk-BIOoiTw0.js";import{n as c}from"./chunk-CpJ_Lh12.js";import"./chunk-wXzftp25.js";import"./chunk-CjzDLHuf.js";import"./chunk-DkhztfFA.js";import"./chunk-fEI7Cr-O.js";import"./chunk-Ch0SDxT-.js";import"./chunk-DBIPdCjN.js";import"./chunk-GUS17821.js";import"./chunk-C0rvwxKZ.js";import"./chunk-Dbf52212.js";import"./chunk-PRdFQBMq.js";import"./chunk-0Zaq1wvr.js";import"./chunk-CzpZNd4_.js";import"./chunk-DaElAkV7.js";import"./chunk-dV9XXr8j.js";import"./chunk-WV0cqKBx.js";import"./chunk-BqCjAVY1.js";import"./chunk-CcEbRgUF.js";import"./chunk-BwRFwgC6.js";import"./chunk-BJTpKgK3.js";import"./chunk-DamHRycg.js";import"./chunk-CvgiXnaQ.js";import"./chunk-DQPQcGVT.js";import"./chunk-BVOXn0Ja.js";import"./chunk-Kd31FpPv.js";import"./chunk-DgAf_RsW.js";import"./chunk-Sgy9emtd.js";import"./chunk-Wa8cmqdu.js";import"./chunk-DQ-QT0Vo.js";import"./chunk-Bhv0yprn.js";import"./chunk-DODQBCAp.js";import"./chunk-gdH5z67Y.js";import"./chunk-BL-KIaGs.js";import"./chunk-DZufO9oG.js";import"./chunk-DNKaSHkQ.js";import"./chunk-E_L1hJO1.js";import"./chunk-CggzEh3c.js";const h=.2;let t=class extends d(c(l)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=a("enable-feature:im-shading"),this.drapeTargetType=s.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?h:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new p;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),o),"modifications")}};r([e()],t.prototype,"layer",void 0),r([e()],t.prototype,"i3slayer",null),r([e(n)],t.prototype,"updatingProgress",void 0),r([e()],t.prototype,"updatingProgressValue",null),r([e()],t.prototype,"lodFactor",null),r([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([m("esri.views.3d.layers.SceneLayerView3D")],t);const Z=t;export{Z as default};
