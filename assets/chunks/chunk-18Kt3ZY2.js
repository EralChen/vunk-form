import{fv as i,dd as n,V as l,dV as d,$ as r,a0 as s,dU as o,a2 as h}from"./chunk-COS73Icn.js";import"./chunk-MvqiMl48.js";import"./chunk-CwIodqNZ.js";import"./chunk-BAtEUBju.js";import"./chunk-fEI7Cr-O.js";import"./chunk-Ch0SDxT-.js";import"./chunk-DBIPdCjN.js";let t=class extends i(n){constructor(e){super(e),this.layerViews=new l}set layerViews(e){this._set("layerViews",d(e,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((e,a)=>e+a.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(e){}moveStart(){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,a)=>this.container.addChildAt(e.container,a))}};r([s({cast:o})],t.prototype,"layerViews",null),r([s({readOnly:!0})],t.prototype,"updatingProgress",null),t=r([h("esri.views.2d.layers.KnowledgeGraphLayerView2D")],t);const V=t;export{V as default};
