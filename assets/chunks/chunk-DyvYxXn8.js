const a=(n,t,s,e)=>{if(t==null||e&&n==null)return n;if(Array.isArray(t)){if(!t.length)return n;t=t.flat(1/0);const[i,...f]=t;let r=n[i];return r===void 0&&(s?.(n,i,f[0]),r=n[i]),f.length?a(r,f,s,e):r}else return n instanceof Map?n.get(t):n[t]},l=(n,t)=>{const s=n;let e=t.k;if(Array.isArray(e)){e=e.flat(1/0);const i=[...e];if(e=i.pop(),n=a(n,i,t.intoUndefined),n===void 0&&i.length){const f=i.pop(),r=a(s,i);r&&(t.intoUndefined?.(r,f,e),n=r[f])}}if(Array.isArray(n)&&t.insert){n.splice(e,0,t.v);return}n instanceof Map?n.set(e,t.v):n[e]=t.v},d=(n,t,s)=>{s!==void 0&&(typeof s=="number"?n[t]=[]:n[t]={})},p=(n,t)=>{t.intoUndefined=t.intoUndefined??d,l(n,t)};export{d,p as e,a as g,l as s};
