import{$ as y,j as n}from"./chunk-Bw3U0dUR.js";import{l as c,j as p,k as i,m as u}from"./chunk-Ceac9yqH.js";import"./chunk-Defr39CA.js";import"./chunk-BvwBNQlH.js";import"./chunk-Isw0PHqr.js";import"./chunk-DsEj1cS7.js";import"./chunk-Ch0SDxT-.js";import"./chunk-DBIPdCjN.js";const s="Image Service",g="imagery-layer-save",v="imagery-layer-save-as",f="imagery-tile-layer-save",d="imagery-tile-layer-save-as";function m(r){if(r.type==="imagery")return{isValid:!0};const{raster:e}=r,a=e?.datasetFormat==="Function"?e.primaryRasters?.rasters[0]:e;return{isValid:a?.datasetFormat==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function l(r){const e=r.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function T(r,e){const{parsedUrl:a,title:t,fullExtent:o}=r;e.url=a.path,e.title||=t;try{e.extent=await c(o)}catch{e.extent=void 0}p(e,i.METADATA),r.type==="imagery-tile"&&u(e,i.TILED_IMAGERY)}async function R(r,e){const a=r.type==="imagery"?g:f;return y({layer:r,itemType:s,validateLayer:m,createItemData:l,errorNamePrefix:a},e)}async function j(r,e,a){const t=r.type==="imagery"?v:d;return n({layer:r,itemType:s,validateLayer:m,createItemData:l,errorNamePrefix:t,newItem:e,setItemProperties:T},a)}export{R as save,j as saveAs};
