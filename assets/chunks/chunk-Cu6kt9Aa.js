import{dd as n,s as m,$ as i,a0 as o,a2 as d}from"./chunk-Ceac9yqH.js";import{n as p}from"./chunk-Dd8VJPz2.js";import{c as y}from"./chunk-Dk4o2riU.js";import"./chunk-Defr39CA.js";import"./chunk-BvwBNQlH.js";import"./chunk-Isw0PHqr.js";import"./chunk-DsEj1cS7.js";import"./chunk-Ch0SDxT-.js";import"./chunk-DBIPdCjN.js";let e=class extends y(p(n)){constructor(){super(...arguments),this.type="elevation-3d"}get tileInfo(){return this.layer.tileInfo}initialize(){const t=this.view?.map?.allLayers,a=t&&t.includes(this.layer),r=this.view?.map?.ground?.layers,s=r&&r.includes(this.layer);if(a&&!s){const l=new m("layerview:elevation-layer-only","3D elevation layer '"+this.layer.id+"' can only be added to layers in map.ground");this.addResolvingPromise(Promise.reject(l))}this._addTilingSchemeMatchPromise()}};i([o()],e.prototype,"layer",void 0),i([o()],e.prototype,"tileInfo",null),e=i([d("esri.views.3d.layers.ElevationLayerView3D")],e);const P=e;export{P as default};
