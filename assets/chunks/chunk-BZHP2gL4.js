import{s as m,br as h,$ as d,a2 as c}from"./chunk-BRTsdaL7.js";import{N as l}from"./chunk-5DGIWkFR.js";import{m as u}from"./chunk-Ds6ELqgH.js";import"./chunk-BxXr0pY4.js";import"./chunk-4avqd0lp.js";import"./chunk-CApvMCHp.js";import"./chunk-fEI7Cr-O.js";import"./chunk-Ch0SDxT-.js";import"./chunk-DBIPdCjN.js";import"./chunk-DPTJtnn8.js";import"./chunk-DIqxJmMg.js";import"./chunk-D8afMbkP.js";let r=class extends u(l){constructor(){super(...arguments),this.type="wms-3d"}initialize(){this.layer.serviceSupportsSpatialReference(this.view.spatialReference)||this.addResolvingPromise(Promise.reject(new m("layerview:spatial-reference-incompatible","The spatial references supported by this WMS layer are incompatible with the spatial reference of the view"))),this._updatingHandles.add(()=>this.exportImageParameters?.version,()=>{this._updatingHandles.addPromise(this.refreshDebounced())})}createFetchPopupFeaturesQuery(i){const s=this.findExtentInfoAt(i),e=s.extent,t=new h(e[0],e[1],e[2],e[3],this._spatialReference),a=s.imageSize,o=a.width,p=a.height,n=t.width/o;return{extent:t,width:o,height:p,x:Math.round((i.x-t.xmin)/n),y:Math.round((t.ymax-i.y)/n)}}getFetchOptions(){return{timeExtent:this.timeExtent}}};r=d([c("esri.views.3d.layers.WMSLayerView3D")],r);const F=r;export{F as default};
