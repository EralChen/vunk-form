import{bM as S,jv as O,jw as P,dh as $,jx as q,jy as E,jz as G,jA as A,jB as B,jC as N,cN as H,cZ as J}from"./chunk-XIlYN-8S.js";async function U(t,d,l,I,o){const{elevationProvider:p,renderCoordsHelper:i}=t,{elevationInfo:f}=d,{pointsInFeatures:b,spatialReference:u}=I,g=S.fromJSON(u),h=O(f,!0),y=await P(h,g,o);$(o);const c=[],e=new Set,s=new Set,a=new B,n=q(0,0,0,S.WGS84),r=new N,v=H();n.spatialReference=g;const z=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:m,points:R}of b){const j=l(m);if(j==null){for(const w of R)c.push(w.z??0);e.add(m);continue}j.isDraped&&s.add(m);const C=j.graphic.geometry;a.setFromElevationInfo(E(C,f)),a.updateFeatureExpressionInfoContext(y,j.graphic,d);for(const{x:w,y:D,z:F}of R)n.x=w,n.y=D,n.z=F??0,await G(n,v,z,0,{signal:o}),A(v,p,a,i,r),c.push(r.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function W(t,d,l){if(t==null||d.candidates.length===0)return x;const I=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,o=[],p=[],{renderer:i}=t,f=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?J():null,b=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await f,r=await t.getRenderingInfoAsync(s,i,n,{signal:l});return r==null?[]:a.queryForSnapping(e,g,r,l)},{candidates:u,spatialReference:g}=d;for(let e=0;e<u.length;++e){const s=u[e],{objectId:a}=s,n=typeof a=="number"?I?.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(o.push(b(s,n)),p.push(e))}if(o.length===0)return x;const h=await Promise.all(o);$(l);const y=[],c=[];for(let e=0;e<h.length;++e){const s=h[e],a=p[e];for(const n of s)y.push(n),c.push(a)}return{candidates:y,sourceCandidateIndices:c}}const x={candidates:[],sourceCandidateIndices:[]};export{U as m,W as r};
