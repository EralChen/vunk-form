import{dd as n,s as d,$ as i,a0 as o,a2 as m}from"./chunk-BW-F2k8C.js";import{n as y}from"./chunk-BUKVWVUh.js";import{c as p}from"./chunk-B9hAjYjU.js";import"./chunk-By3pYRVZ.js";import"./chunk-CrV41Nja.js";import"./chunk-9eDQGDPh.js";import"./chunk-fEI7Cr-O.js";import"./chunk-Ch0SDxT-.js";let e=class extends p(y(n)){constructor(){super(...arguments),this.type="elevation-3d"}get tileInfo(){return this.layer.tileInfo}initialize(){const t=this.view?.map?.allLayers,a=t&&t.includes(this.layer),r=this.view?.map?.ground?.layers,s=r&&r.includes(this.layer);if(a&&!s){const l=new d("layerview:elevation-layer-only","3D elevation layer '"+this.layer.id+"' can only be added to layers in map.ground");this.addResolvingPromise(Promise.reject(l))}this._addTilingSchemeMatchPromise()}};i([o()],e.prototype,"layer",void 0),i([o()],e.prototype,"tileInfo",null),e=i([m("esri.views.3d.layers.ElevationLayerView3D")],e);const I=e;export{I as default};
